/*
* Copyright 2011 red.es
* Autores: IDOM Consulting
*
* Licencia con arreglo a la EUPL, Versiï¿½n 1.1 o -en cuanto
* sean aprobadas por la Comision Europea- versiones
* posteriores de la EUPL (la <<Licencia>>);
* Solo podra usarse esta obra si se respeta la Licencia.
* Puede obtenerse una copia de la Licencia en:
*
* http://ec.europa.eu/idabc/eupl5
*
* Salvo cuando lo exija la legislacion aplicable o se acuerde.
* por escrito, el programa distribuido con arreglo a la
* Licencia se distribuye <<TAL CUAL>>,
* SIN GARANTIAS NI CONDICIONES DE NINGUN TIPO, ni expresas
* ni implicitas.
* Vease la Licencia en el idioma concreto que rige
* los permisos y limitaciones que establece la Licencia.
*/ 

package com.mitc.redes.editorfip.entidades.fipxml;

import java.util.HashSet;
import java.util.Set;

import org.w3c.dom.Document;
import org.w3c.dom.DocumentFragment;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

/**
 * Regimenespecifico generated by hbm2java
 */
public class RegulacionEspecifica  implements java.io.Serializable {


     private int iden;
     private int orden;
     private String nombre;
     private String texto;
     private Set<RegulacionEspecifica> regulacionesespecificas = new HashSet<RegulacionEspecifica>(0);

    public RegulacionEspecifica() {
    }

	
    public RegulacionEspecifica(int iden, int orden) {
        this.iden = iden;
        this.orden = orden;
    }
    public RegulacionEspecifica(int iden,  int orden, String nombre, String texto) {
       this.iden = iden;
       this.orden = orden;
       this.nombre = nombre;
       this.texto = texto;
    }

     public DocumentFragment FIP(Document aXML){
         try{
            Node aNodo;
            Element aRoot;
            Element aElement;
            DocumentFragment aXMLFrag;



            aRoot=aXML.createElement("REGULACION-ESPECIFICA");

            aRoot.setAttribute("orden",String.valueOf(orden));
            aRoot.setAttribute("nombre",String.valueOf(nombre));


            if (texto!=null && !texto.equals("")){
                aNodo=aXML.createElement("TEXTO");
                aNodo.setTextContent(texto);
                aRoot.appendChild(aNodo);
            }



            if (regulacionesespecificas.size()>0){
                aNodo=aXML.createElement("HIJAS");
                for(  RegulacionEspecifica regHija : regulacionesespecificas){
                    aNodo.appendChild(regHija.FIP(aXML));
                }
                aRoot.appendChild(aNodo);
            }



            aXMLFrag=aXML.createDocumentFragment();
            aXMLFrag.appendChild(aRoot);
            return aXMLFrag;

        }catch (Exception ex){
            return null;
        }

    }

    public int getIden() {
        return this.iden;
    }
    
    public void setIden(int iden) {
        this.iden = iden;
    }
    


    public int getOrden() {
        return this.orden;
    }
    
    public void setOrden(int orden) {
        this.orden = orden;
    }
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    public String getTexto() {
        return this.texto;
    }
    
    public void setTexto(String texto) {
        this.texto = texto;
    }
    public Set<RegulacionEspecifica> getRegulacionesespecificas() {
        return this.regulacionesespecificas;
    }

    public void setRegulacionesespecificas(Set<RegulacionEspecifica> regulacionesespecificas) {
         this.regulacionesespecificas=regulacionesespecificas;
    }





}


