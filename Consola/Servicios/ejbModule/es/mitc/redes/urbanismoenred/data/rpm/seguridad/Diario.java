/*
* Copyright 2011 red.es
* Autores: Arnaiz Consultores.
*
** Licencia con arreglo a la EUPL, Versi√≥n 1.1 o -en cuanto
** sean aprobadas por la Comision Europea- versiones
** posteriores de la EUPL (la <<Licencia>>);
** Solo podra usarse esta obra si se respeta la Licencia.
* Puede obtenerse una copia de la Licencia en:
*
* http://ec.europa.eu/idabc/eupl5
*
** Salvo cuando lo exija la legislacion aplicable o se acuerde
* por escrito, el programa distribuido con arreglo a la
* Licencia se distribuye <<TAL CUAL>>,
** SIN GARANTIAS NI CONDICIONES DE NINGUN TIPO, ni expresas
** ni implicitas.
** Vease la Licencia en el idioma concreto que rige
* los permisos y limitaciones que establece la Licencia.
*/
package es.mitc.redes.urbanismoenred.data.rpm.seguridad;
// Generated 11-mar-2010 9:52:39 by Hibernate Tools 3.2.1.GA

import es.mitc.redes.urbanismoenred.utils.consola.OgridColumnModel;
import java.util.Date;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * Diario generated by hbm2java
 */
public class Diario implements java.io.Serializable {



     /**
	 * 
	 */
	private static final long serialVersionUID = -5601679096227147724L;
	private int iden;
     private Operaciones operaciones;
     private Subsistema subsistema;
     private Usuario usuario;
     private Date fechalogin;
     private String log;
     

    public Diario() {
    }

    public Diario(int iden, Usuario usuario) {
        this.iden = iden;
        this.usuario = usuario;
    }

    public Diario(int iden, Operaciones operaciones, Subsistema subsistema, Usuario usuario, Date fechalogin, String log) {
       this.iden = iden;
       this.operaciones = operaciones;
       this.subsistema = subsistema;
       this.usuario = usuario;
       this.fechalogin = fechalogin;
       this.log = log;
    }

    public int getIden() {
        return this.iden;
    }

    public void setIden(int iden) {
        this.iden = iden;
    }

    public Operaciones getOperaciones() {
        return this.operaciones;
    }

    public void setOperaciones(Operaciones operaciones) {
        this.operaciones = operaciones;
    }

    public Subsistema getSubsistema() {
        return this.subsistema;
    }

    public void setSubsistema(Subsistema subsistema) {
        this.subsistema = subsistema;
    }

    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    public Date getFechalogin() {
        return this.fechalogin;
    }

    public void setFechalogin(Date fechalogin) {
        this.fechalogin = fechalogin;
    }

    public String getLog() {
        return this.log;
    }

    public void setLog(String log) {
        this.log = log;
    }



public static Map<String, Object> getColumnModel(){

        Map<String, Object> res = new HashMap<String, Object>();
        List<Map<String, Object>> lcms = new ArrayList<Map<String, Object>>();

        lcms.add((new OgridColumnModel("Usuario", "user", "string", 100)).toJSON());
        lcms.add((new OgridColumnModel("Fecha", "fecha", "string", 180)).toJSON());
        lcms.add((new OgridColumnModel("Operacion", "operacion", "string", 250)).toJSON());
        lcms.add((new OgridColumnModel("Subsistema", "subsistema", "string", 150)).toJSON());
        lcms.add((new OgridColumnModel("Log", "log", "String", 80)).toJSON());

        res.put("cm", lcms);
        return res;
    }

    public static Map<String, Object> getColumnModelRefundido() {
        Map<String, Object> res = new HashMap<String, Object>();
        List<Map<String, Object>> lcms = new ArrayList<Map<String, Object>>();

        lcms.add((new OgridColumnModel("Usuario", "user", "string", 100)).toJSON());
        lcms.add((new OgridColumnModel("Fecha", "fecha", "string", 180)).toJSON());
        lcms.add((new OgridColumnModel("Operacion", "operacion", "string", 250)).toJSON());
        lcms.add((new OgridColumnModel("Subsistema", "subsistema", "string", 150)).toJSON());
        lcms.add((new OgridColumnModel("Documentos", "log", "String", 90)).toJSON());
        
        res.put("cm", lcms);
        return res;
    }

    public Map<String, Object> toJSON() {
        Map<String, Object> res = new HashMap<String, Object>();

        res.put("iden", this.getIden());
        res.put("operacion", this.getOperaciones().getNombre());
        res.put("user", this.getUsuario().getNombre());
        res.put("fecha", this.getFechalogin().toString());
        res.put("subsistema", this.subsistema.getNombre());
        if (this.getLog() == null || this.getLog().equalsIgnoreCase("")) {
            res.put("log", "");
        } else {
            String dir = this.getLog().trim();
            if(dir.substring(dir.length()-3,dir.length()).equals("xml")){
                res.put("log", "FIP2");
            }else{
                res.put("log", "Disponible");
            }
        }

        return res;
    }

    public Map<String, Object> toJSONRefundido() {
        Map<String, Object> res = new HashMap<String, Object>();
        res.put("iden", this.getIden());
        res.put("operacion", this.getOperaciones().getNombre());
        res.put("user", this.getUsuario().getNombre());
        res.put("fecha", this.getFechalogin().toString());
        res.put("subsistema", this.subsistema.getNombre());
        if (this.getLog() == null || this.getLog().equalsIgnoreCase("")) {
            res.put("log", "");
        } else {
            String dir = this.getLog().trim();
            if(dir.substring(dir.length()-3,dir.length()).equals("xml")){
                res.put("log", "FIP2");
            }else{
                res.put("log", "Log");
            }
        }
        return res;
    }
}


