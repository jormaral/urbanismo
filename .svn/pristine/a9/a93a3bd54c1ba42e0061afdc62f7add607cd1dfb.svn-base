/*
* Copyright 2011 red.es
* Autores: Arnaiz Consultores.
*
** Licencia con arreglo a la EUPL, Versión 1.1 o -en cuanto
** sean aprobadas por la Comision Europea- versiones
** posteriores de la EUPL (la <<Licencia>>);
** Solo podra usarse esta obra si se respeta la Licencia.
* Puede obtenerse una copia de la Licencia en:
*
* http://ec.europa.eu/idabc/eupl5
*
** Salvo cuando lo exija la legislacion aplicable o se acuerde
* por escrito, el programa distribuido con arreglo a la
* Licencia se distribuye <<TAL CUAL>>,
** SIN GARANTIAS NI CONDICIONES DE NINGUN TIPO, ni expresas
** ni implicitas.
** Vease la Licencia en el idioma concreto que rige
* los permisos y limitaciones que establece la Licencia.
*/
package es.mitc.redes.urbanismoenred.data.rpm.diccionario;
// Generated 08-jul-2009 12:36:15 by Hibernate Tools 3.2.1.GA

import es.mitc.redes.urbanismoenred.utils.consola.OgridColumnModel;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Tipooperacionplan generated by hbm2java
 */
public class Tipooperacionplan implements java.io.Serializable {

    /**
	 * 
	 */
	private static final long serialVersionUID = -1741450686467548082L;
	private int iden;
    private Literal literal;
    private Set<Instrumentotipooperacionplan> instrumentotipooperacionplans = new HashSet<Instrumentotipooperacionplan>(0);

    public Tipooperacionplan() {
    }

    public Tipooperacionplan(int iden) {
        this.iden = iden;
    }

    public Tipooperacionplan(int iden, Literal literal, Set<Instrumentotipooperacionplan> instrumentotipooperacionplans) {
        this.iden = iden;
        this.literal = literal;
        this.instrumentotipooperacionplans = instrumentotipooperacionplans;
    }

    public int getIden() {
        return this.iden;
    }

    public void setIden(int iden) {
        this.iden = iden;
    }

    public Literal getLiteral() {
        this.literal.getTexto("es");
        return this.literal;
    }

    public void setLiteral(Literal literal) {
        this.literal = literal;
    }

    public Set<Instrumentotipooperacionplan> getInstrumentotipooperacionplans() {
        return this.instrumentotipooperacionplans;
    }

    public void setInstrumentotipooperacionplans(Set<Instrumentotipooperacionplan> instrumentotipooperacionplans) {
        this.instrumentotipooperacionplans = instrumentotipooperacionplans;
    }

    public Map<String, Object> toJSON(String idioma) {
        Map<String, Object> res = new HashMap<String, Object>();

        res.put("iden", this.getIden());
        res.put("nombre", this.getLiteral().getTexto(idioma));

        return res;
    }

    public static Map<String, Object> getColumnModel() {
        Map<String, Object> res = new HashMap<String, Object>();
        List<Map<String, Object>> lcms = new ArrayList<Map<String, Object>>();

        lcms.add((new OgridColumnModel("Id", "iden", "number", 126)).toJSON());
        lcms.add((new OgridColumnModel("Nombre", "nombre", "string", 300)).toJSON());
        res.put("cm", lcms);
        return res;
    }

    public String fromJSON(Map<String, Object> data, String idioma) throws IOException {
        String result = "Correcto";
        try {
            Set<String> ks = data.keySet();
            if (!ks.contains("iden") || !ks.contains("nombre")) {
                throw new IOException("No se ha podido cargar el objeto a partir de la información JSON. Datos incompletos");
            }

            Literal lit = this.literal;
            if (lit == null) {
                lit = new Literal();
                this.setLiteral(lit);
            }

            lit.addTraduccion(data.get("nombre").toString(), idioma);
        } catch (Exception ex) {
            result = "error";
        }
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Tipooperacionplan other = (Tipooperacionplan) obj;
        if (this.iden != other.iden) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 53 * hash + this.iden;
        return hash;
    }
}


