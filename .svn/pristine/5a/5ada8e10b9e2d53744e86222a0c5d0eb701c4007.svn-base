/*
* Copyright 2011 red.es
* Autores: Arnaiz Consultores.
*
** Licencia con arreglo a la EUPL, Versi√≥n 1.1 o -en cuanto
** sean aprobadas por la Comision Europea- versiones
** posteriores de la EUPL (la <<Licencia>>);
** Solo podra usarse esta obra si se respeta la Licencia.
* Puede obtenerse una copia de la Licencia en:
*
* http://ec.europa.eu/idabc/eupl5
*
** Salvo cuando lo exija la legislacion aplicable o se acuerde
* por escrito, el programa distribuido con arreglo a la
* Licencia se distribuye <<TAL CUAL>>,
** SIN GARANTIAS NI CONDICIONES DE NINGUN TIPO, ni expresas
** ni implicitas.
** Vease la Licencia en el idioma concreto que rige
* los permisos y limitaciones que establece la Licencia.
*/
package es.mitc.redes.urbanismoenred.data.rpm.diccionario;
// Generated 08-jul-2009 12:36:15 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;

/**
 * Defrelacion generated by hbm2java
 */
public class Defrelacion  implements java.io.Serializable {


     /**
	 * 
	 */
	private static final long serialVersionUID = 5529110200757735387L;
	private int iden;
     private Literal literal;
     private int nmininstancias;
     private int nmaxinstancias;
     private Set<Defpropiedad> defpropiedads = new HashSet<Defpropiedad>(0);
     private Set<Defvector> defvectors = new HashSet<Defvector>(0);

    public Defrelacion() {
    }

	
    public Defrelacion(int iden, Literal literal, int nmininstancias, int nmaxinstancias) {
        this.iden = iden;
        this.literal = literal;
        this.nmininstancias = nmininstancias;
        this.nmaxinstancias = nmaxinstancias;
    }
    public Defrelacion(int iden, Literal literal, int nmininstancias, int nmaxinstancias, Set<Defpropiedad> defpropiedads, Set<Defvector> defvectors) {
       this.iden = iden;
       this.literal = literal;
       this.nmininstancias = nmininstancias;
       this.nmaxinstancias = nmaxinstancias;
       this.defpropiedads = defpropiedads;
       this.defvectors = defvectors;
    }
   
    public int getIden() {
        return this.iden;
    }
    
    public void setIden(int iden) {
        this.iden = iden;
    }
    public Literal getLiteral() {
        return this.literal;
    }
    
    public void setLiteral(Literal literal) {
        this.literal = literal;
    }
    public int getNmininstancias() {
        return this.nmininstancias;
    }
    
    public void setNmininstancias(int nmininstancias) {
        this.nmininstancias = nmininstancias;
    }
    public int getNmaxinstancias() {
        return this.nmaxinstancias;
    }
    
    public void setNmaxinstancias(int nmaxinstancias) {
        this.nmaxinstancias = nmaxinstancias;
    }
    public Set<Defpropiedad> getDefpropiedads() {
        return this.defpropiedads;
    }
    
    public void setDefpropiedads(Set<Defpropiedad> defpropiedads) {
        this.defpropiedads = defpropiedads;
    }
    public Set<Defvector> getDefvectors() {
        return this.defvectors;
    }
    
    public void setDefvectors(Set<Defvector> defvectors) {
        this.defvectors = defvectors;
    }




}


