<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
                                   "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated 27-jul-2009 13:12:52 by Hibernate Tools 3.2.1.GA -->
<hibernate-mapping auto-import="false">
 <class
  name="es.mitc.redes.urbanismoenred.data.rpm.planeamiento.Planshp"
  schema="planeamiento" table="planshp">
  <id name="iden" type="int">
   <column name="iden"/>
   <generator class="sequence">
    <param name="sequence">planeamiento.planeamiento_planshp_iden_seq</param>
   </generator>
  </id>
  <many-to-one
   class="es.mitc.redes.urbanismoenred.data.rpm.planeamiento.Plan"
   fetch="select" name="plan">
   <column name="idplan"/>
  </many-to-one>
  <property formula="AsText(geom)" generated="never" lazy="false"
   name="geom" type="string">
   <column name="geom"/>
  </property>
 </class>
 <sql-query name="Planshp.actualizarContorno">UPDATE planeamiento.planshp SET geom = 
	(SELECT st_multi(st_union(st_envelope(geom))) FROM planeamiento.entidadpol 
		INNER JOIN planeamiento.entidad ON entidadpol.identidad=entidad.iden 
		AND entidad.idTramite=:idTramite) 
		WHERE idplan=:idPlan</sql-query>
<sql-query name="Planshp.crearContorno">INSERT INTO planeamiento.planshp (idplan, geom) VALUES  
	(:idPlan, (SELECT st_multi(st_union(st_envelope(geom))) FROM planeamiento.entidadpol 
		INNER JOIN planeamiento.entidad ON entidadpol.identidad=entidad.iden 
		AND entidad.idTramite=:idTramite)) 
		</sql-query>
</hibernate-mapping>
