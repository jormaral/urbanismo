package es.mitc.redes.urbanismoenred.data.rpm.refundido;

// Generated 03-abr-2012 12:30:29 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Entidad generated by hbm2java
 */
@Entity
@Table(name = "entidad")
public class Entidad implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8052916330263300483L;
	private int iden;
	private Tramite tramite;
	private Entidad entidadByIdentidadoriginal;
	private Entidad entidadByIdentidadbase;
	private Entidad entidadByIdpadre;
	private String nombre;
	private String clave;
	private String etiqueta;
	private String codigo;
	private boolean bsuspendida;
	private int orden;
	private Set<Entidadlin> entidadlins = new HashSet<Entidadlin>(0);
	private Set<Entidadpnt> entidadpnts = new HashSet<Entidadpnt>(0);
	private Set<Entidaddeterminacion> entidaddeterminacions = new HashSet<Entidaddeterminacion>(
			0);
	private Set<Entidad> entidadsForIdpadre = new HashSet<Entidad>(0);
	private Set<Entidad> entidadsForIdentidadbase = new HashSet<Entidad>(0);
	private Set<Entidad> entidadsForIdentidadoriginal = new HashSet<Entidad>(0);
	private Set<Documentoentidad> documentoentidads = new HashSet<Documentoentidad>(
			0);
	private Set<Ambitoaplicacionambito> ambitoaplicacionambitos = new HashSet<Ambitoaplicacionambito>(
			0);
	private Set<Operacionentidad> operacionentidadsForIdentidad = new HashSet<Operacionentidad>(
			0);
	private Set<Entidadpol> entidadpols = new HashSet<Entidadpol>(0);
	private Set<Operacionentidad> operacionentidadsForIdentidadoperadora = new HashSet<Operacionentidad>(
			0);

	public Entidad() {
	}

	public Entidad(int iden, Tramite tramite, String codigo,
			boolean bsuspendida, int orden) {
		this.iden = iden;
		this.tramite = tramite;
		this.codigo = codigo;
		this.bsuspendida = bsuspendida;
		this.orden = orden;
	}

	public Entidad(int iden, Tramite tramite,
			Entidad entidadByIdentidadoriginal, Entidad entidadByIdentidadbase,
			Entidad entidadByIdpadre, String nombre, String clave,
			String etiqueta, String codigo, boolean bsuspendida, int orden,
			Set<Entidadlin> entidadlins, Set<Entidadpnt> entidadpnts,
			Set<Entidaddeterminacion> entidaddeterminacions,
			Set<Entidad> entidadsForIdpadre,
			Set<Entidad> entidadsForIdentidadbase,
			Set<Entidad> entidadsForIdentidadoriginal,
			Set<Documentoentidad> documentoentidads,
			Set<Ambitoaplicacionambito> ambitoaplicacionambitos,
			Set<Operacionentidad> operacionentidadsForIdentidad,
			Set<Entidadpol> entidadpols,
			Set<Operacionentidad> operacionentidadsForIdentidadoperadora) {
		this.iden = iden;
		this.tramite = tramite;
		this.entidadByIdentidadoriginal = entidadByIdentidadoriginal;
		this.entidadByIdentidadbase = entidadByIdentidadbase;
		this.entidadByIdpadre = entidadByIdpadre;
		this.nombre = nombre;
		this.clave = clave;
		this.etiqueta = etiqueta;
		this.codigo = codigo;
		this.bsuspendida = bsuspendida;
		this.orden = orden;
		this.entidadlins = entidadlins;
		this.entidadpnts = entidadpnts;
		this.entidaddeterminacions = entidaddeterminacions;
		this.entidadsForIdpadre = entidadsForIdpadre;
		this.entidadsForIdentidadbase = entidadsForIdentidadbase;
		this.entidadsForIdentidadoriginal = entidadsForIdentidadoriginal;
		this.documentoentidads = documentoentidads;
		this.ambitoaplicacionambitos = ambitoaplicacionambitos;
		this.operacionentidadsForIdentidad = operacionentidadsForIdentidad;
		this.entidadpols = entidadpols;
		this.operacionentidadsForIdentidadoperadora = operacionentidadsForIdentidadoperadora;
	}

	@Id
	@Column(name = "iden", unique = true, nullable = false)
	public int getIden() {
		return this.iden;
	}

	public void setIden(int iden) {
		this.iden = iden;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtramite", nullable = false)
	public Tramite getTramite() {
		return this.tramite;
	}

	public void setTramite(Tramite tramite) {
		this.tramite = tramite;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "identidadoriginal")
	public Entidad getEntidadByIdentidadoriginal() {
		return this.entidadByIdentidadoriginal;
	}

	public void setEntidadByIdentidadoriginal(Entidad entidadByIdentidadoriginal) {
		this.entidadByIdentidadoriginal = entidadByIdentidadoriginal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "identidadbase")
	public Entidad getEntidadByIdentidadbase() {
		return this.entidadByIdentidadbase;
	}

	public void setEntidadByIdentidadbase(Entidad entidadByIdentidadbase) {
		this.entidadByIdentidadbase = entidadByIdentidadbase;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpadre")
	public Entidad getEntidadByIdpadre() {
		return this.entidadByIdpadre;
	}

	public void setEntidadByIdpadre(Entidad entidadByIdpadre) {
		this.entidadByIdpadre = entidadByIdpadre;
	}

	@Column(name = "nombre", length = 100)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "clave")
	public String getClave() {
		return this.clave;
	}

	public void setClave(String clave) {
		this.clave = clave;
	}

	@Column(name = "etiqueta", length = 100)
	public String getEtiqueta() {
		return this.etiqueta;
	}

	public void setEtiqueta(String etiqueta) {
		this.etiqueta = etiqueta;
	}

	@Column(name = "codigo", nullable = false, length = 10)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "bsuspendida", nullable = false)
	public boolean isBsuspendida() {
		return this.bsuspendida;
	}

	public void setBsuspendida(boolean bsuspendida) {
		this.bsuspendida = bsuspendida;
	}

	@Column(name = "orden", nullable = false)
	public int getOrden() {
		return this.orden;
	}

	public void setOrden(int orden) {
		this.orden = orden;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
	public Set<Entidadlin> getEntidadlins() {
		return this.entidadlins;
	}

	public void setEntidadlins(Set<Entidadlin> entidadlins) {
		this.entidadlins = entidadlins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
	public Set<Entidadpnt> getEntidadpnts() {
		return this.entidadpnts;
	}

	public void setEntidadpnts(Set<Entidadpnt> entidadpnts) {
		this.entidadpnts = entidadpnts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
	public Set<Entidaddeterminacion> getEntidaddeterminacions() {
		return this.entidaddeterminacions;
	}

	public void setEntidaddeterminacions(
			Set<Entidaddeterminacion> entidaddeterminacions) {
		this.entidaddeterminacions = entidaddeterminacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidadByIdpadre")
	public Set<Entidad> getEntidadsForIdpadre() {
		return this.entidadsForIdpadre;
	}

	public void setEntidadsForIdpadre(Set<Entidad> entidadsForIdpadre) {
		this.entidadsForIdpadre = entidadsForIdpadre;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidadByIdentidadbase")
	public Set<Entidad> getEntidadsForIdentidadbase() {
		return this.entidadsForIdentidadbase;
	}

	public void setEntidadsForIdentidadbase(
			Set<Entidad> entidadsForIdentidadbase) {
		this.entidadsForIdentidadbase = entidadsForIdentidadbase;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidadByIdentidadoriginal")
	public Set<Entidad> getEntidadsForIdentidadoriginal() {
		return this.entidadsForIdentidadoriginal;
	}

	public void setEntidadsForIdentidadoriginal(
			Set<Entidad> entidadsForIdentidadoriginal) {
		this.entidadsForIdentidadoriginal = entidadsForIdentidadoriginal;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
	public Set<Documentoentidad> getDocumentoentidads() {
		return this.documentoentidads;
	}

	public void setDocumentoentidads(Set<Documentoentidad> documentoentidads) {
		this.documentoentidads = documentoentidads;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
	public Set<Ambitoaplicacionambito> getAmbitoaplicacionambitos() {
		return this.ambitoaplicacionambitos;
	}

	public void setAmbitoaplicacionambitos(
			Set<Ambitoaplicacionambito> ambitoaplicacionambitos) {
		this.ambitoaplicacionambitos = ambitoaplicacionambitos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidadByIdentidad")
	public Set<Operacionentidad> getOperacionentidadsForIdentidad() {
		return this.operacionentidadsForIdentidad;
	}

	public void setOperacionentidadsForIdentidad(
			Set<Operacionentidad> operacionentidadsForIdentidad) {
		this.operacionentidadsForIdentidad = operacionentidadsForIdentidad;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
	public Set<Entidadpol> getEntidadpols() {
		return this.entidadpols;
	}

	public void setEntidadpols(Set<Entidadpol> entidadpols) {
		this.entidadpols = entidadpols;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "entidadByIdentidadoperadora")
	public Set<Operacionentidad> getOperacionentidadsForIdentidadoperadora() {
		return this.operacionentidadsForIdentidadoperadora;
	}

	public void setOperacionentidadsForIdentidadoperadora(
			Set<Operacionentidad> operacionentidadsForIdentidadoperadora) {
		this.operacionentidadsForIdentidadoperadora = operacionentidadsForIdentidadoperadora;
	}

}
